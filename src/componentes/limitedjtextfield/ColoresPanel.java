/*
LICENCIA JOSE JAVIER BO
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Beans/Bean.java to edit this template
Lista de paquetes:

 */
package componentes.limitedjtextfield;
/*
 * LICENCIA JOSE JAVIER BO
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 * Lista de paquetes:
 */

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JColorChooser;

/**
 * Panel de edicion del atributo colores
 * @author Jose Javier BO
 */
public class ColoresPanel extends javax.swing.JPanel implements ActionListener {

   //color para el fondo
   private Color colorFondo=Color.WHITE;
   
   //color para el texto
   private Color colorTexto=Color.BLACK;
    
       
    /**
     * Creates new form LimitedJTextFieldPanel
     */
    public ColoresPanel() {
        initComponents();
        agregarEventos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbFondo = new javax.swing.JLabel();
        visorFondo = new javax.swing.JTextField();
        btnFondo = new javax.swing.JButton();
        lbTexto = new javax.swing.JLabel();
        visorTexto = new javax.swing.JTextField();
        btnTexto = new javax.swing.JButton();

        lbFondo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbFondo.setText("Color Fondo:");

        btnFondo.setText("...");
        btnFondo.setActionCommand("fondo");

        lbTexto.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbTexto.setText("Color Texto:");

        btnTexto.setText("...");
        btnTexto.setActionCommand("texto");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(visorFondo, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFondo))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(visorTexto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTexto)))
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbFondo)
                    .addComponent(visorFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFondo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTexto)
                    .addComponent(visorTexto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTexto))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFondo;
    private javax.swing.JButton btnTexto;
    private javax.swing.JLabel lbFondo;
    private javax.swing.JLabel lbTexto;
    private javax.swing.JTextField visorFondo;
    private javax.swing.JTextField visorTexto;
    // End of variables declaration//GEN-END:variables

    
    /**
     * Actualiza los paneles de visualizacion del color
     */
    private void actualizaVisores(){
        visorFondo.setBackground(colorFondo);
        visorTexto.setBackground(colorTexto);
    }
    
    /**
     * Agrega los listner a los botones
     */
    private void agregarEventos() {
        btnFondo.addActionListener(this);
        btnTexto.addActionListener(this);
    }

    
    /**
     * Abre el editor de color cuando se ha pulsado alguno de los botones
     * @param e 
     */
    @Override
    public void actionPerformed(ActionEvent e) {
        String ac = e.getActionCommand();
        switch (ac){
            case "fondo":
                Color nuevoColorFondo = JColorChooser.showDialog(this,"Color del fondo", colorFondo);
                if (nuevoColorFondo!=null){
                    colorFondo=nuevoColorFondo;
                    actualizaVisores();
                }
            break;
            
            case "texto":
                Color nuevoColorTexto = JColorChooser.showDialog(this,"Color del texto", colorTexto);
                if (nuevoColorTexto!=null){
                    colorTexto=nuevoColorTexto;
                    actualizaVisores();
                }
        }
    }
    
    
    /**
     * Devuelve el valor de tipo Colores selecionado
     * @return 
     */
    public Colores getSelectedValue(){
        System.out.println("FONDO"+colorFondo);
        System.out.println("TEXTO"+colorFondo);
        return new Colores(colorFondo,colorTexto);
    }
}
